<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>ðŸ”± Hydra Security Dashboard</title>
  <style>
    body { font-family: Arial, sans-serif; background: #0f172a; color: #e2e8f0; text-align: center; padding: 50px; }
    h1 { font-size: 3em; color: #38bdf8; }
    .panel { background: #1e293b; border-radius: 12px; padding: 20px; margin: 20px auto; width: 60%; }
    input, button { padding: 10px; margin: 5px; border-radius: 6px; border: none; }
    button { background: #38bdf8; color: #fff; cursor: pointer; }
    button:hover { background: #0284c7; }
    pre { white-space: pre-wrap; word-wrap: break-word; }
  </style>
</head>
<body>
  <h1>ðŸ”± Hydra Anti-Phishing & Traffic Defense</h1>
  <p>Served by instance: <b>{{ instance }}</b></p>

  <div class="panel">
    <h2>Block a Suspicious Domain</h2>
    <input id="blockInput" placeholder="example.com">
    <button onclick="blockUrl()">Block & Analyze</button>
    <p><pre id="blockResult"></pre></p>
  </div>

  <div class="panel">
    <h2>Check Domain Safety</h2>
    <input id="checkInput" placeholder="example.com">
    <button onclick="checkUrl()">Check</button>
    <p><pre id="checkResult" style="text-align:left; color:#cfe7ff;"></pre></p>
  </div>

  <div class="panel">
    <h2>System Status</h2>
    <p id="status">Waiting for requests...</p>
  </div>

  <script>
    async function checkUrl() {
      const url = document.getElementById("checkInput").value;
      const resEl = document.getElementById("checkResult");
      resEl.innerText = "Checking...";
      try {
        const res = await fetch('/check?url=' + encodeURIComponent(url));
        const j = await res.json();
        if (!res.ok) {
          resEl.innerText = "Error: " + (j.error || res.statusText);
          return;
        }
        let text = `URL: ${j.url}\nReachable: ${j.reachable}\nStatus: ${j.status_code}\n`;
        if (j.error) text += `Error: ${j.error}\n`;
        if (j.content_snippet) text += `Snippet: ${j.content_snippet}`;
        resEl.innerText = text;
      } catch (err) {
        resEl.innerText = "Fetch error: " + err;
      }
    }
    
    async function blockUrl() {
      const url = document.getElementById("blockInput").value;
      const resEl = document.getElementById("blockResult");
      resEl.innerText = "Blocking and analyzing...";
      try {
        const formData = new URLSearchParams();
        formData.append('url', url);
        
        const res = await fetch("/block", { 
            method: "POST", 
            body: formData 
        });
        
        const j = await res.json();
        if (!res.ok) {
            resEl.innerText = "Error: " + (j.message || "Failed to block.");
        } else {
            resEl.innerText = "Success!\n" + j.message;
        }
      } catch(err) {
        resEl.innerText = "Fetch error: " + err;
      }
    }
    
    // Poll backend for status
    setInterval(async () => {
      try {
        const res = await fetch("/status");
        document.getElementById("status").innerText = await res.text();
      } catch (err) {
        document.getElementById("status").innerText = "Connection failed.";
      }
    }, 2000);
  </script>
</body>
</html>